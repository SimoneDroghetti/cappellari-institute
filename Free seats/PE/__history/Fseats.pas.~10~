unit Fseats;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids,
  Vcl.DBGrids, Vcl.StdCtrls, freeseatspresenter, freeseatsinterface,freeseatsmodel;

type
  TForm2 = class(TForm, Iseatview)
    Label1: TLabel;
    Label2: TLabel;
    RichiestaPosti: TEdit;
    MemoDisplay: TMemo;
    CheckDispButton: TButton;
    GrigliaTeatro: TDBGrid;
    procedure CheckDispButtonClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure RichiestaPostiKeyPress(Sender: TObject; var Key: Char);
   // procedure CheckDispButtonClick(Sender: TObject);
  private
    { Private declarations }
     FseatPresenter: tseatpresenter;
  public

    { Public declarations }
        function Getvalue:integer;
  //  procedure popolagriglia;
    procedure popolamemo(Avalue:string);
 //   procedure eseguicontrollo;
    procedure DisplayMessage(AValue: string);

  end;

var
  Form2: TForm2;

  const APPTITLE = 'Titolo programma';
implementation

{$R *.dfm}

procedure TForm2.DisplayMessage(AValue: string);
begin
  Application.MessageBox(PChar(AValue), PChar(APPTITLE), MB_OK);
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
fseatpresenter:=tseatpresenter.create(self);
end;

//procedure TForm2.CheckDispButtonClick(Sender: TObject);
//begin
////  DataModule1.DataSource1.DataSet.Open;
// //  FseatPresenter.eseguicontrollo;
//end;

procedure TForm2.popolamemo(AValue: String);
begin
  memodisplay.Lines.add(AValue);

end;

procedure TForm2.RichiestaPostiKeyPress(Sender: TObject; var Key: Char);
begin
  // #8 is Backspace
  if not (Key in [#8, '0'..'9']) then begin
    ShowMessage('Inserire valore numerico.');
    // Discard the key
    Key := #0;
  end;

end;

procedure TForm2.CheckDispButtonClick(Sender: TObject);
var condizione1,condizione2, condizione3:string;
begin
MemoDisplay.Lines.Clear;


condizione1:='with free as (select rownumber, seatnumber, taken, row_number() over (partition by rownumber order by seatnumber) as numeraliberi from RoomsAndSeats ';
condizione1:=condizione1+ 'where taken = 0),';
condizione1:=condizione1+ 'adiacenti as (select rownumber, seatnumber, taken, count(*) over (partition by rownumber, seatnumber-numeraliberi) as consecutivi ';
//condizione1:=condizione1+ 'from free), estratti as (select * from adiacenti where consecutivi>=3) ';

condizione1:=condizione1+ 'from free), estratti as (select * from adiacenti where ';

condizione1:=condizione1+ 'consecutivi>='+ RichiestaPosti.Text +') ';

condizione1:=condizione1+ 'SELECT rownumber, count(CASE WHEN seatnumber = 1 THEN taken END) AS attr1, count(CASE WHEN seatnumber = 2 THEN taken END) AS attr2,';
condizione1:=condizione1+ 'count(CASE WHEN seatnumber = 3 THEN taken END) AS attr3, count(CASE WHEN seatnumber = 4 THEN taken END) AS attr4,';
condizione1:=condizione1+ 'count(CASE WHEN seatnumber = 5 THEN taken END) AS attr5,count(CASE WHEN seatnumber = 6 THEN taken END) AS attr6,';
condizione1:=condizione1+ 'count(CASE WHEN seatnumber = 7 THEN taken END) AS attr7,count(CASE WHEN seatnumber = 8 THEN taken END) AS attr8,';
condizione1:=condizione1+ 'count(CASE WHEN seatnumber = 9 THEN taken END) AS attr9,count(CASE WHEN seatnumber = 10 THEN taken END) AS attr10,';
condizione1:=condizione1+ 'count(CASE WHEN seatnumber = 11 THEN taken END) AS attr11,count(CASE WHEN seatnumber = 12 THEN taken END) AS attr12,';
condizione1:=condizione1+ 'count(CASE WHEN seatnumber = 13 THEN taken END) AS attr13';


//,
//  count(CASE WHEN seatnumber = 14 THEN taken END) AS attr14,
//  count(CASE WHEN seatnumber = 15 THEN taken END) AS attr15,
//  count(CASE WHEN seatnumber = 16 THEN taken END) AS attr16,
//  count(CASE WHEN seatnumber = 17 THEN taken END) AS attr17,
//  count(CASE WHEN seatnumber = 18 THEN taken END) AS attr18,
//  count(CASE WHEN seatnumber = 19 THEN taken END) AS attr19,
//  count(CASE WHEN seatnumber = 20 THEN taken END) AS attr20,
//  count(CASE WHEN seatnumber = 21 THEN taken END) AS attr21,
//  count(CASE WHEN seatnumber = 22 THEN taken END) AS attr22,
//  count(CASE WHEN seatnumber = 23 THEN taken END) AS attr23,
//  count(CASE WHEN seatnumber = 24 THEN taken END) AS attr24,
//  count(CASE WHEN seatnumber = 25 THEN taken END) AS attr25,
//  count(CASE WHEN seatnumber = 26 THEN taken END) AS attr26,
//  count(CASE WHEN seatnumber = 27 THEN taken END) AS attr27,
//  count(CASE WHEN seatnumber = 28 THEN taken END) AS attr28,
//  count(CASE WHEN seatnumber = 29 THEN taken END) AS attr29,
//  count(CASE WHEN seatnumber = 30 THEN taken END) AS attr30,
//  count(CASE WHEN seatnumber = 31 THEN taken END) AS attr31,
//  count(CASE WHEN seatnumber = 32 THEN taken END) AS attr32,
//  count(CASE WHEN seatnumber = 33 THEN taken END) AS attr33,
//  count(CASE WHEN seatnumber = 34 THEN taken END) AS attr34,
//  count(CASE WHEN seatnumber = 35 THEN taken END) AS attr35,
//  count(CASE WHEN seatnumber = 36 THEN taken END) AS attr36,
//  count(CASE WHEN seatnumber = 37 THEN taken END) AS attr37,
//  count(CASE WHEN seatnumber = 38 THEN taken END) AS attr38,
//  count(CASE WHEN seatnumber = 39 THEN taken END) AS attr39,
//  count(CASE WHEN seatnumber = 40 THEN taken END) AS attr40
condizione1:=condizione1+ ' FROM estratti GROUP BY rownumber';
//showmessage(condizione1);

//DataModule1.DataSource1.DataSet.Open;
DataModule1.DataSource2.DataSet.Open;
DataModule1.ADOQuery1.sql.Clear;

DataModule1.ADOQuery1.SQL.Add(condizione1);
DataModule1.ADOQuery1.Open;

FseatPresenter.eseguicontrollo;
end;

function TForm2.Getvalue: integer;
begin
  result:=strtoint(richiestaposti.Text);
end;

end.
